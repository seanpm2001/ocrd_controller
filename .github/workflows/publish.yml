name: Publish OCR-D Controller
on:
  push:
    branches: 
      - master
      - stable
  schedule:
     - cron: '0 0 * * 0' # run weekly
  workflow_dispatch: # run manually

env:
  IMAGE_TAG: latest
  OCRD_ALL_VERSION: 'maximum-git'
  REGISTRY_PATH: ghcr.io/slub

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Run read-yaml action
      if: endsWith(github.ref, '/stable')
      id: docker-compose-data
      uses: jbutcher5/read-yaml@1.6
      with:
        file: './docker-compose.yml'
        key-path: '["services", "ocrd-controller", "build", "args", "VERSION"]'
        
    - name: Set environment variables for the stable version
      if: endsWith(github.ref, '/stable')
      run: |
        echo "IMAGE_TAG=stable" >> $GITHUB_ENV
        echo "OCRD_ALL_VERSION=${{ steps.docker-compose-data.outputs.data }}" >> $GITHUB_ENV

    - # Activate cache export feature to reduce build time of images
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Determine build args
      run: |
        date -u +"build_date=%Y-%m-%dT%H:%M:%SZ" >> $GITHUB_ENV
        echo "vcs_ref=`git rev-parse --short HEAD`" >> $GITHUB_ENV
        echo "vcs_tag=`git describe --always --tags --abbrev=0 HEAD 2>/dev/null`" >> $GITHUB_ENV

    - name: Build the latest OCR-D Controller image and deploy to GitHub Container Repository
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ env.REGISTRY_PATH }}/ocrd_controller:${{ env.IMAGE_TAG }}
        build-args: |
          BUILD_DATE=${{ env.build_date }}
          VCS_REF=${{ env.vcs_ref }}
          VERSION=${{ env.OCRD_ALL_VERSION }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
