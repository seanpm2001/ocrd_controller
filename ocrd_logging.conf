# This is a template configuration file to demonstrate
# formats and destinations of log messages with OCR-D.
# It's meant as an example, and should be customized.
# To get into effect, you must put a copy (under the same name)
# into your CWD, HOME or /etc. These directories are searched
# in said order, and the first find wins. When no config file
# is found, the default logging configuration applies (cf. ocrd_logging.py).
# 
# mandatory loggers section
# configure loggers with corresponding keys "root",""
# each logger requires a corresponding configuration section below
#
[loggers]
keys=root,ocrd_profile,ocrd_tensorflow,ocrd_shapely_geos,ocrd_PIL

#
# mandatory handlers section
# handle output for logging "channel"
# i.e. console, file, smtp, syslog, http, ...
# each handler requires a corresponding handler configuration section below
#
[handlers]
keys=consoleHandler,syslogHandler,fileHandler

#
# optional formatters section
# format message records, to be used differently by logging handlers
# each formatter requires a corresponding formatter section below
#
[formatters]
keys=defaultFormatter,detailedFormatter

#
# default logger "root" configured to use only consoleHandler
#
[logger_root]
level=INFO
handlers=consoleHandler,syslogHandler


#
# additional logger configurations can be added
# as separate configuration sections like below
#
# example logger "ocrd_workspace" uses fileHandler and overrides
# default log level "INFO" with custom level "DEBUG" 
# "qualname" must match the logger label used in the corresponding 
# ocrd module
# see in the modul-of-interrest (moi)
#
# example configuration entry
#
# logger ocrd.workspace
#
#[logger_ocrd_workspace]
#level=DEBUG
#handlers=fileHandler
#qualname=ocrd.workspace

[logger_ocrd_profile]
level=INFO
handlers=fileHandler
qualname=ocrd.process.profile

#
# logger tensorflow
#
[logger_ocrd_tensorflow]
level=ERROR
handlers=consoleHandler,syslogHandler
qualname=tensorflow

#
# logger shapely.geos
#
[logger_ocrd_shapely_geos]
level=ERROR
handlers=consoleHandler,syslogHandler
qualname=shapely.geos


#
# logger PIL
#
[logger_ocrd_PIL]
level=INFO
handlers=consoleHandler,syslogHandler
qualname=PIL


#
# handle stderr output
#
[handler_consoleHandler]
class=StreamHandler
formatter=defaultFormatter
args=(sys.stderr,)

#
# send to rsyslogd
#
[handler_syslogHandler]
class=logging.handlers.SysLogHandler
formatter=defaultFormatter
args=('/dev/log', 'user')

#
# example logfile handler
# handle output with logfile
#
[handler_fileHandler]
class=FileHandler
formatter=detailedFormatter
args=('ocrd.log','a+')

#
# default log format conforming to OCR-D (https://ocr-d.de/en/spec/cli#logging)
#
[formatter_defaultFormatter]
format=%(asctime)s.%(msecs)03d %(levelname)s %(name)s - %(message)s
datefmt=%H:%M:%S

#
# store more logging context information
#
[formatter_detailedFormatter]
format=%(asctime)s.%(msecs)03d %(levelname)-8s (%(name)s)[%(filename)s:%(lineno)d] - %(message)s
datefmt=%H:%M:%S
